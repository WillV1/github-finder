{"version":3,"sources":["components/layout/Navbar.js","context/github/GithubState.js","context/github/githubContext.js","context/alert/alertContext.js","components/users/Search.js","components/users/ImageCard.js","components/users/UserItem.js","components/layout/Spinner.js","components/users/Users.js","components/pages/Home.js","components/layout/Alert.js","components/pages/About.js","components/pages/NotFound.js","components/users/UserCard.js","components/repos/RepoCard.js","components/repos/RepoItem.js","components/repos/Repos.js","components/users/User.js","context/github/githubReducer.js","context/types.js","context/alert/alertReducer.js","context/alert/AlertState.js","App.js","index.js"],"names":["Navigation","props","Navbar","className","bg","expand","icon","faGithub","size","Brand","title","Toggle","aria-controls","Collapse","id","Nav","to","defaultProps","githubClientId","githubClientSecret","githubContext","createContext","alertContext","Search","useContext","GithubContext","AlertContext","useState","text","setText","Container","Row","Col","md","Form","onSubmit","e","preventDefault","setAlert","searchUsers","Control","type","name","placeholder","value","onChange","target","Button","variant","block","users","length","onClick","clearUsers","ImageCard","Card","style","width","Img","src","image","alt","Body","Title","login","UserItem","user","avatar_url","html_url","html","Spinner","userStyle","display","gridTemplateColumns","gap","Users","loading","map","key","Home","Alert","alert","faInfoCircle","msg","About","NotFound","location","bio","href","company","blog","RepoCard","ListGroup","Item","rel","RepoItem","repo","Repos","repos","User","match","getUser","getUserRepos","useEffect","params","hireable","faCheck","faTimesCircle","state","action","payload","process","GITHUB_CLIENT_ID","GITHUB_CLIENT_SECRET","GithubState","useReducer","GithubReducer","dispatch","a","setLoading","axios","get","res","data","items","Provider","children","AlertState","AlertReducer","setTimeout","App","basename","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.45487a98.chunk.js","sourcesContent":["import React from 'react';\r\nimport Proptypes from 'prop-types';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport './Navbar.css';\r\n\r\nconst Navigation = (props) => {\r\n\r\n\r\n    return (\r\n        <Navbar className=\"navbar\" bg=\"danger\" expand=\"lg\">\r\n            <FontAwesomeIcon className=\"icon\" icon={faGithub} size=\"2x\" />\r\n            <Navbar.Brand ><p>{props.title}</p></Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"ml-auto\">\r\n                    <Link className=\"nav-link\" to=\"/\"><p>Home</p></Link>\r\n                    <Link className=\"nav-link\" to=\"/about\"><p>About</p></Link>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar >\r\n    )\r\n}\r\n\r\nNavigation.defaultProps = {\r\n    title: 'Github Finder',\r\n    icon: { faGithub }\r\n};\r\n\r\nNavigation.propTypes = {\r\n    title: Proptypes.string.isRequired,\r\n    icon: Proptypes.object.isRequired\r\n}\r\n\r\nexport default Navigation;","import React, {useReducer} from 'react';\r\nimport axios from 'axios';\r\nimport GithubContext from './githubContext';\r\nimport GithubReducer from './githubReducer';\r\n\r\nimport {\r\n    SEARCH_USERS,\r\n    SET_LOADING,\r\n    CLEAR_USERS,\r\n    GET_USER,\r\n    GET_REPOS\r\n} from '../types';\r\n\r\nlet githubClientId;\r\nlet githubClientSecret;\r\n\r\nif(process.env.NODE_ENV !=='production') {\r\n    githubClientId = process.env.REACT_APP_GITHUB_CLIENT_ID;\r\n    githubClientSecret = process.env.REACT_APP_GITHUB_CLIENT_SECRET;\r\n} else {\r\n    githubClientId = process.env.GITHUB_CLIENT_ID;\r\n    githubClientSecret = process.env.GITHUB_CLIENT_SECRET;\r\n}\r\n\r\nconst GithubState = props => {\r\n    const initialState = {\r\n        users: [],\r\n        user: {},\r\n        repos: [],\r\n        loading: false\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(GithubReducer, initialState);\r\n\r\n    //Search users\r\n    const searchUsers = async (text) => {\r\n        setLoading();\r\n    \r\n        const res = await axios\r\n          .get(`https://api.github.com/search/users?q=${text}&client_id=${githubClientId}&client_secret=${githubClientSecret}`);\r\n    \r\n        \r\n       dispatch({type: SEARCH_USERS,\r\n                payload: res.data.items})\r\n      }\r\n    //Get user\r\n    const getUser = async (login) => {\r\n        setLoading();\r\n    \r\n        const res = await axios\r\n          .get(`https://api.github.com/users/${login}?client_id=${githubClientId}&client_secret=${githubClientSecret}`);\r\n    \r\n          dispatch({\r\n              type: GET_USER,\r\n              payload: res.data\r\n          })\r\n      }\r\n\r\n    //Get repos\r\n    const getUserRepos = async (login) => {\r\n        setLoading();\r\n    \r\n        const res = await axios\r\n          .get(`https://api.github.com/users/${login}/repos?per_page=5&sort=created:asc&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\r\n    \r\n        dispatch ({\r\n            type: GET_REPOS,\r\n            payload: res.data\r\n        })\r\n      }\r\n    //Clear users\r\n    const clearUsers = () => dispatch({type: CLEAR_USERS}) \r\n\r\n    //Set loading\r\n    const setLoading = () => dispatch({type: SET_LOADING})\r\n\r\n    return <GithubContext.Provider \r\n    value={{\r\n        users: state.users,\r\n        user: state.user,\r\n        repos: state.repos,\r\n        loading: state.loading,\r\n        searchUsers,\r\n        clearUsers,\r\n        getUser,\r\n        getUserRepos\r\n    }}>\r\n        {props.children}\r\n    </GithubContext.Provider>\r\n}\r\n\r\nexport default GithubState;","import {createContext} from 'react';\r\n\r\nconst githubContext = createContext();\r\n\r\nexport default githubContext;","import {createContext} from 'react';\r\n\r\nconst alertContext = createContext();\r\n\r\nexport default alertContext;","import React, {useState, useContext} from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport GithubContext from '../../context/github/githubContext';\r\nimport AlertContext from '../../context/alert/alertContext';\r\n\r\nimport './Search.css';\r\n\r\nconst Search =() => {\r\n    const githubContext = useContext(GithubContext);\r\n    const alertContext = useContext(AlertContext);    \r\n    const [text, setText] = useState('');\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (text === '') {\r\n            alertContext.setAlert('Please enter name', 'light')\r\n        } else {\r\n            githubContext.searchUsers(text);\r\n            setText('');\r\n        }\r\n    }\r\n\r\n    const onChange = (e) => setText(e.target.value )\r\n\r\n\r\n        return (\r\n            <div>\r\n                <Container>\r\n                    <Row>\r\n                        <Col md={4}></Col>\r\n                        <Col md={4}>\r\n                            <Form onSubmit={onSubmit}>\r\n                                <Form.Control id=\"inline\" type=\"text\" name=\"text\"\r\n                                    placeholder=\"Search Users...\" value={text} onChange={onChange} />\r\n                                <Button id=\"search-button\" variant=\"dark\" type=\"submit\" block>Search</Button>\r\n                                {githubContext.users.length > 0 && <Button id=\"clear-button\" variant=\"light\" type=\"submit\" onClick={githubContext.clearUsers} block>Clear</Button>}\r\n                            </Form>\r\n                        </Col>\r\n                        <Col md={4}></Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default Search;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\n\r\nconst ImageCard = (props) => {\r\n\r\n    return (        \r\n        <Card className=\"card\" style={{ width: '10rem' }}>\r\n        <Card.Img variant=\"top\" src={props.image} alt=\"photo image\"/>\r\n        <Card.Body>\r\n          <Card.Title>{props.login}</Card.Title>\r\n          <Link to={`/user/${props.login}`} className=\"btn btn-dark\">More</Link>\r\n        </Card.Body>\r\n      </Card>\r\n    )\r\n}\r\n\r\nexport default ImageCard;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ImageCard from './ImageCard';\r\n\r\n\r\nconst UserItem = ({ user: { login, avatar_url, html_url } }) => {\r\n\r\n\r\n  return (\r\n    <div>\r\n      <ImageCard\r\n        image={avatar_url}\r\n        login={login}\r\n        html={html_url}\r\n\r\n      />\r\n    </div>\r\n\r\n  )\r\n\r\n}\r\n\r\nUserItem.propTypes = {\r\n  user: PropTypes.object.isRequired\r\n\r\n}\r\n\r\nexport default UserItem;","import React, {Fragment} from 'react';\r\n\r\nconst Spinner = () => <Fragment>\r\n        <div className=\"ui segment\">\r\n            <div className=\"ui active dimmer\">\r\n                <div className=\"ui loader\"></div>\r\n            </div>\r\n        </div>\r\n    </Fragment>\r\n\r\n\r\nexport default Spinner;","import React, {useContext} from 'react';\r\nimport UserItem from './UserItem';\r\nimport Spinner from '../layout/Spinner';\r\n\r\nimport GithubContext from '../../context/github/githubContext';\r\n\r\nconst Users = () => {\r\n    const githubContext = useContext(GithubContext);\r\n    \r\n    const {loading, users} = githubContext;\r\n\r\n    if (loading) {\r\n        return <Spinner />\r\n    } else {\r\n        return (\r\n            <div style={userStyle}>\r\n                {users.map(user => (\r\n                    <UserItem key={user.id} user={user} />\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst userStyle = {\r\n    display: 'grid',\r\n    gridTemplateColumns: 'repeat(3, 1fr)',\r\n    gap: '1rem',\r\n}\r\n\r\n\r\nexport default Users;","import React, {Fragment} from 'react';\r\nimport Search from '../users/Search';\r\nimport Users from '../users/Users';\r\n\r\nconst Home = () => <Fragment>\r\n       <Search />\r\n       <Users />\r\n    </Fragment>\r\n\r\n\r\nexport default Home;","import React, {useContext} from 'react';\r\nimport AlertContext from '../../context/alert/alertContext';\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/row';\r\nimport Col from 'react-bootstrap/col';\r\nimport './Alert.css'\r\nimport { faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst Alert = () => {\r\n    const alertContext = useContext(AlertContext);\r\n\r\n    const {alert} = alertContext;\r\n\r\n    return (\r\n        alert !== null && (\r\n            <div className={`alert alert-${alert.type}`}>\r\n                <Container>\r\n                    <Row>\r\n                        <Col className=\"alert-icon\">\r\n                        <FontAwesomeIcon icon={faInfoCircle} /> {alert.msg}\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n\r\n        )\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Alert;","import React, {Fragment} from 'react';\r\n\r\nconst About = () => {\r\n    return (\r\n        <Fragment>\r\n            <h1>About this App</h1>\r\n            <h2>App to search Github users</h2>\r\n            <h6>Version: 1.0.0</h6>\r\n        </Fragment> \r\n    )\r\n\r\n}\r\n\r\nexport default About;","import React, {Fragment} from 'react';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <Fragment>\r\n            <h1>Not Found</h1>\r\n            <h6>The page you are looking for does not exist.</h6>\r\n        </Fragment> \r\n    )\r\n\r\n}\r\n\r\nexport default NotFound;","import React, {Fragment} from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport './UserCard.css'\r\n\r\nconst ImageCard = (props) => {\r\n\r\n    return (        \r\n        <Card className=\"card\" style={{ width: '20rem' }}>\r\n        <Card.Img variant=\"top\" src={props.image} alt=\"photo image\"/>\r\n        <Card.Body>\r\n          <Card.Title>{props.name}</Card.Title>\r\n          Location: {props.location}\r\n          <div className=\"bio\">\r\n          {props.bio && (\r\n          <Fragment>\r\n              <Card.Title>Bio</Card.Title>\r\n              {props.bio}\r\n              </Fragment>)}\r\n            </div>\r\n            <Button className=\"link-button\" href={props.html} target=\"_blank\" variant=\"dark\" type=\"submit\" block>Visit Github Profile</Button>\r\n            <ul>\r\n                <li>\r\n                   {props.login && <Fragment>\r\n                        <strong>Username:</strong>{props.login}\r\n                   </Fragment>} \r\n                </li>\r\n                <li>\r\n                   {props.company && <Fragment>\r\n                        <strong>Company:</strong>{props.company}\r\n                   </Fragment>} \r\n                </li>\r\n                <li>\r\n                   {props.blog && <Fragment>\r\n                        <strong>Website:</strong>{props.blog}\r\n                   </Fragment>} \r\n                </li>\r\n            </ul>\r\n        </Card.Body>\r\n      </Card>\r\n    )\r\n}\r\n\r\nexport default ImageCard;\r\n\r\n","import React from 'react';\r\n// import { Link } from 'react-router-dom';\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\n\r\n\r\nconst RepoCard = (props) => {\r\n\r\n    return (\r\n\r\n        <ListGroup>\r\n            <ListGroup.Item><a href={props.html} rel=\"noopener noreferrer\" target=\"_blank\">{props.name}</a></ListGroup.Item>\r\n        </ListGroup>\r\n    )\r\n}\r\n\r\nexport default RepoCard;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport RepoCard from './RepoCard';\r\n\r\n\r\nconst RepoItem = ({ repo }) => {\r\n\r\n\r\n  return (\r\n    <div>\r\n      <RepoCard\r\n        html={repo.html_url}\r\n        name={repo.name}\r\n      />\r\n    </div>\r\n\r\n  )\r\n\r\n}\r\n\r\nRepoItem.propTypes = {\r\n  repo: PropTypes.object.isRequired\r\n\r\n}\r\n\r\nexport default RepoItem;","import React from 'react';\r\nimport RepoItem from './RepoItem'\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Repos = ({ repos }) => {\r\n    return repos.map(repo => <RepoItem repo={repo} key={repo.id} />)\r\n\r\n}\r\n\r\nRepos.propTypes = {\r\n    repos: PropTypes.array.isRequired\r\n};\r\n\r\nexport default Repos;","import React, { Fragment, useEffect, useContext } from 'react';\r\nimport Spinner from '../layout/Spinner';\r\nimport UserCard from './UserCard';\r\nimport Repos from '../repos/Repos';\r\nimport GithubContext from '../../context/github/githubContext';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport './User.css'\r\n\r\n\r\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst User = ( {match }) => {\r\n    const githubContext = useContext(GithubContext);\r\n    \r\n    const {getUser, loading, user, repos, getUserRepos} = githubContext;\r\n\r\n    useEffect(() => {\r\n        getUser(match.params.login);\r\n        getUserRepos(match.params.login);\r\n        //eslint-disable-next-line\r\n    }, []);\r\n\r\n        const { name, avatar_url, location, bio, blog, login, html_url, company, hireable } = user;\r\n\r\n        if (loading) return <Spinner />\r\n\r\n        return (\r\n            <Fragment>\r\n                <Link to='/' className=\"btn btn-light\">Back to Search\r\n              </Link>\r\n              Hireable: { ' '}\r\n                {hireable ? \r\n                    <FontAwesomeIcon icon={faCheck} />\r\n                 : <FontAwesomeIcon icon={faTimesCircle} />\r\n                    }\r\n                <div className=\"user\">\r\n                <UserCard\r\n                    image={avatar_url}\r\n                    name={name}\r\n                    location={location}\r\n                    bio={bio}\r\n                    html={html_url}\r\n                    login={login}\r\n                    company={company}\r\n                    blog={blog} />\r\n                </div>\r\n                <div className=\"repos\">\r\n                <Repos repos={repos} />\r\n                </div>\r\n            </Fragment>\r\n\r\n        )\r\n}\r\n\r\nexport default User;","import {\r\n    SEARCH_USERS,\r\n    SET_LOADING,\r\n    CLEAR_USERS,\r\n    GET_USER,\r\n    GET_REPOS\r\n} from '../types';\r\n\r\nexport default (state, action) => {\r\n    switch(action.type) {\r\n        case SEARCH_USERS:\r\n            return{\r\n                ...state,\r\n                users: action.payload,\r\n                loading: false\r\n            }\r\n        case GET_USER:\r\n            return{\r\n                ...state,\r\n                user: action.payload,\r\n                loading: false\r\n            }\r\n        case CLEAR_USERS: \r\n            return{\r\n                ...state,\r\n                users: [],\r\n                loading: false\r\n            }\r\n        case GET_REPOS:\r\n            return{\r\n                ...state,\r\n                repos: action.payload,\r\n                loading: false\r\n            }\r\n        case SET_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n    default: return state;\r\n    }\r\n}","export const SEARCH_USERS = 'SEARCH_USERS';\r\nexport const GET_USER = 'GET_USER';\r\nexport const CLEAR_USERS = 'CLEAR_USERS';\r\nexport const GET_REPOS = 'GET_REPOS';\r\nexport const SET_LOADING = 'SET_LOADING';\r\nexport const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\r\n\r\n","import {SET_ALERT, REMOVE_ALERT} from '../types';\r\n\r\nexport default (state, action) => {\r\n    switch(action.type) {\r\n        case SET_ALERT:\r\n            return action.payload;\r\n        case REMOVE_ALERT:\r\n            return null;\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, {useReducer} from 'react';\r\nimport AlertContext from './alertContext';\r\nimport AlertReducer from './alertReducer';\r\n\r\nimport {\r\n    SET_ALERT,\r\n    REMOVE_ALERT\r\n} from '../types';\r\n\r\nconst AlertState = props => {\r\n    const initialState = null;\r\n\r\n    const [state, dispatch] = useReducer(AlertReducer, initialState);\r\n\r\n    //Set Alert\r\n    const setAlert = (msg, type) => {\r\n        dispatch({\r\n            type: SET_ALERT,\r\n            payload: {msg, type}\r\n        })\r\n        setTimeout(() => dispatch({type: REMOVE_ALERT}), 2000)\r\n      }\r\n\r\n    return <AlertContext.Provider \r\n    value={{\r\n        alert: state,\r\n        setAlert\r\n        \r\n    }}>\r\n        {props.children}\r\n    </AlertContext.Provider>\r\n}\r\n\r\nexport default AlertState;","import React from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport Navigation from './components/layout/Navbar';\nimport Home from './components/pages/Home';\nimport Alert from './components/layout/Alert';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport User from './components/users/User';\n\nimport Container from 'react-bootstrap/Container';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport GithubState from './context/github/GithubState';\nimport AlertState from './context/alert/AlertState';\n\nconst App = () => {\n\n    return (\n      <GithubState>\n      <AlertState>\n      <HashRouter basename='/'>\n        <div>\n          <Navigation />\n          <Container>\n            <Alert />\n            <Switch>\n              <Route exact path=\"/\"  component={Home}/>\n              <Route exact path='/about' component={About} />\n              <Route exact path='/user/:login' component={User} />\n              <Route component={NotFound} />\n            </Switch>\n          </Container>\n        </div>\n      </HashRouter>\n      </AlertState>\n      </GithubState>\n    );\n  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}